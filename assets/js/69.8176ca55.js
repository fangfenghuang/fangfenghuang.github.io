(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{398:function(t,n,e){"use strict";e.r(n);var r=e(0),i=Object(r.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"go-的指针是不支持指针运算和转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#go-的指针是不支持指针运算和转换"}},[t._v("#")]),t._v(" Go 的指针是不支持指针运算和转换")]),t._v(" "),n("p",[t._v("Go 是一门静态语言,所有的变量都必须为标量类型.不同的类型不能够进行赋值,计算等跨类型的操作\n指针也对应着相对的类型,也在 Compile 的静态类型检查的范围内\n同时静态语言,也称为强类型.也就是一旦定义了,就不能再改变它")]),t._v(" "),n("h2",{attrs:{id:"unsafe-pointer不安全指针"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#unsafe-pointer不安全指针"}},[t._v("#")]),t._v(" unsafe.Pointer不安全指针")]),t._v(" "),n("p",[t._v("它表示任意类型且可寻址的指针值,可以在不同的指针类型之间进行转换（类似 C 语言的 void * 的用途）\n其包含四种核心操作：")]),t._v(" "),n("ul",[n("li",[t._v("任何类型的指针值都可以转换为 Pointer")]),t._v(" "),n("li",[t._v("Pointer 可以转换为任何类型的指针值")]),t._v(" "),n("li",[t._v("uintptr 可以转换为 Pointer")]),t._v(" "),n("li",[t._v("Pointer 可以转换为 uintptr")])]),t._v(" "),n("p",[t._v("unsafe.Pointer 可以让您的变量在不同的指针类型转来转去,也就是表示为任意可寻址的指针类型\nuintptr 常用于与 unsafe.Pointer 打配合,用于做指针运算")])])}),[],!1,null,null,null);n.default=i.exports}}]);